{
  "hash": "5e40ca751b5ec561b3a2b409ccb820c5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Slicing\"\ndate: 05-25-2023\ncategories: [R] # self-defined categories\ndraft: false # setting this to \\`true\\` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\nSo, we know about dplyr::filter() to chose rows based on a condition that you give within the filter command. So when would you need a dplyr::slice() instead?\n\nLets consider [this excel file](https://www.dktinternational.org/wp-content/uploads/2023/06/Historical-CSM-Statistics-1991-2021-v2023.06.12.xlsx) that gives the sales data for contraceptive social marketing programs from 1991 to present. If you want to know more about this data, here is the [DKT International website](https://www.dktinternational.org/contraceptive-social-marketing-statistics/) that has all the details.\n\nLets go ahead and import the data in this file into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"tidyverse\", \n               \"here\",\n               \"rio\")\ndkt_raw <- rio::import(here(\"blog_files\",\"20230525_dplyr_slice\",\n                       \"Historical-CSM-Statistics-1991-2021-v2023.06.12.xlsx\")\n                  )\n```\n:::\n\n\nLets look at it - note that glimpse, which is my usual go to is not helpful here. View() from base R helps actually look through the dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dkt_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,790\nColumns: 34\n$ ...1                                                    <chr> NA, NA, NA, NA…\n$ `Contraceptive SOCPial Marketing Statistics, 1991-2020` <chr> NA, \"This spre…\n$ ...3                                                    <dbl> NA, NA, NA, NA…\n$ ...4                                                    <dbl> NA, NA, NA, NA…\n$ ...5                                                    <chr> NA, NA, NA, NA…\n$ ...6                                                    <chr> NA, NA, NA, NA…\n$ ...7                                                    <dbl> NA, NA, NA, NA…\n$ ...8                                                    <chr> NA, NA, NA, NA…\n$ ...9                                                    <dbl> NA, NA, NA, NA…\n$ ...10                                                   <dbl> NA, NA, NA, NA…\n$ ...11                                                   <dbl> NA, NA, NA, NA…\n$ ...12                                                   <dbl> NA, NA, NA, NA…\n$ ...13                                                   <dbl> NA, NA, NA, NA…\n$ ...14                                                   <dbl> NA, NA, NA, NA…\n$ ...15                                                   <dbl> NA, NA, NA, NA…\n$ ...16                                                   <dbl> NA, NA, NA, NA…\n$ ...17                                                   <dbl> NA, NA, NA, NA…\n$ ...18                                                   <dbl> NA, NA, NA, NA…\n$ ...19                                                   <dbl> NA, NA, NA, NA…\n$ ...20                                                   <chr> NA, NA, NA, NA…\n$ ...21                                                   <dbl> NA, NA, NA, NA…\n$ ...22                                                   <dbl> NA, NA, NA, NA…\n$ ...23                                                   <dbl> NA, NA, NA, NA…\n$ ...24                                                   <dbl> NA, NA, NA, NA…\n$ ...25                                                   <dbl> NA, NA, NA, NA…\n$ ...26                                                   <dbl> NA, NA, NA, NA…\n$ ...27                                                   <dbl> NA, NA, NA, NA…\n$ `Courtesy of`                                           <chr> \"DKT Internati…\n$ ...29                                                   <chr> NA, NA, NA, NA…\n$ ...30                                                   <dbl> NA, NA, NA, NA…\n$ ...31                                                   <dbl> NA, NA, NA, NA…\n$ ...32                                                   <dbl> NA, NA, NA, NA…\n$ ...33                                                   <dbl> NA, NA, NA, NA…\n$ ...34                                                   <dbl> NA, NA, NA, NA…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nView(dkt_raw)\n```\n:::\n\n\n![](images/clipboard-2605266147.png)\n\nSo the first 11 rows are pretty much useless and can be removed. For this, we could do\n\ndplyr::filter(row_number() \\> 11\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndkt <- dkt_raw |> \n        filter(row_number() > 11)\ndkt |> View()\n```\n:::\n\n\n![](images/clipboard-2725663810.png)\n\nOR dplyr::slice(-(1:11))\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndkt <- dkt_raw |> \n        slice(-(1:11)) \ndkt |> View()\n```\n:::\n\n\n![](images/clipboard-2725663810.png)\n\nBoth have the same result. So whats the deal with needing a \"slice\" function?\n\nslice\\_ comes in handy when used with helpers:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndkt |> slice_head(n = 1) #gives the first row\ndkt |> slice_tail(n = 1) #gives the last row\ndkt |> slice_sample(n = 2) #randomly selects two rows\ndkt |> slice_min(variableA, n = 2) #gives the rows with the 2 lowest values of variableA\ndkt |> slice_max(variableA, n = 3) #gives the rows with the 2 highest values of variableA\n```\n:::\n\n\nEven cooler:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndkt |>  slice_max(variableA, prop = 0.1) #gives the rows with the 10% highest values of variableA\n```\n:::\n\n\nThese are particularly useful when you want the entire row instead of just the highest or lowest value (which can be got using group_by and summarize).\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}